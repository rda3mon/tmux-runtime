######################## general ########################
# Set Ctrl+a as prefix key
set -g prefix2 C-a

# send Ctrl+a to other apps
bind C-a send-prefix -2

# Set base index starting from 1
set -g base-index 1

# Set pane index starting from 1
setw -g pane-base-index 1

# Rename window to currently running program
setw -g automatic-rename on

# When a window is closed, renumber other windows to be continuous
set -g renumber-windows on

# On detach do not destroy the terminal
set-option -g detach-on-destroy off

# Split window, new window with same directory path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Colors
set -g default-terminal "screen-256color"

# Tmux will generate xterm style function key sequences
setw -g xterm-keys on

# Set the escape time in millis, faster response
set -s escape-time 10

# Focus events
set -s focus-events on

# Buffer size limit
set -g history-limit 100000

# History file
set -g history-file ~/.tmux_history

# Set program name to windos name
setw -g automatic-rename on

# Rename windows number when one of the window is closed
set -g renumber-windows on

# Terminal title
set -g set-titles on
#set -g set-titles-string '❐ #S ● #I #(ps --no-headers -t #{pane_tty} -o args -O-c)'

# Pane indicator display time
set -g display-panes-time 5000

# Status message display time
set -g display-time 2000

# Redraw status line every 10s
set -g status-interval 1

# Activity
set -g monitor-activity on
set -g visual-activity off

# Reload config bind
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

setw -g automatic-rename on
set -g set-titles on

# Vi style command mode
set -g status-keys vi

# Vi style copy mode
setw -g mode-keys vi

setw -g mouse on
#set -g mouse on

setw -g window-status-separator ''

setw -g aggressive-resize on

######################## Clipboard ########################
set -s set-clipboard off

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard' 
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -se c -i" \; send-keys -X clear-selection

######################## Status Bar ########################
# position
set -g status-position bottom

# colors
set-option -g status-style bg=colour240
set-option -g status-style fg=colour203
set -g status-style default

# Right status
set -g status-right '#[fg=colour232,bg=colour208,bold] #(#{load_info}) #(#{mem_percentage}) '
#set -g status-right " #[fg=colour232,bg=colour208,bold] MEM: #(echo 'scale=3;' '100-' $(cat /proc/meminfo | grep MemAvailable: | grep -o '[0-9]*')/$(cat /proc/meminfo | grep MemTotal: | grep -o '[0-9]*')*100  | bc) | CPU: #(echo 'scale=3;' '100-' $(cat /proc/stat | head -1 |  sed 's/cpu[ ]*//' | cut -f4 -d' ')/$(cat /proc/stat  | head -1 | sed 's/cpu[ ]*//' | sed 's/ /+/g'| bc)*100 | bc) | CPU: #(. /tmp/test.bash)"

# Left status
set -g status-left ' [#S] '
set -g status-left-style fg=colour232
set -g status-left-style bg=colour208
set -g status-left-style bold

# Status Window
#setw -g window-status-current-style bg=blue,fg=white,bold
setw -g window-status-current-format ' #I:#W#F '
setw -g window-status-current-style fg=brightred,bg=colour236,bright,bold

setw -g window-status-format ' #I:#W#F '
setw -g window-status-current-style fg=colour232,bg=none,bright,bold

######################## Panes ########################
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour12
set -g pane-border-status top
set -g pane-border-format " PPID:#{pane_pid}#(#{process_info} #{pane_pid} #{pane_current_command})"

######################## Copy Mode ########################
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

######################## Key Bindings ########################

# Window switching binding
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Pane switching binding
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# Binding for ssh into same machine as another pane
#bind M-1 send-keys -t. 'mvn install' Enter

# Duplicate the command from current pane(including ssh)
bind C-D run-shell 'tmux split-window -v "$(ps --no-headers --ppid #{pane_pid} -o command 2> /dev/null || pid=$(pgrep -P #{pane_pid}); ps -p $pid -o command | sed 1d); bash"'
bind C-F run-shell 'tmux split-window -h "$(ps --no-headers --ppid #{pane_pid} -o command 2> /dev/null || pid=$(pgrep -P #{pane_pid}); ps -p $pid -o command | sed 1d); bash"'

# Log pane output to temp file
bind C-P pipe-pane -o "cat >>/tmp/#{pane_pid}_tmux.log" \; display "Toggled logging to /tmp/tmux_#{pane_pid}.log"

# Synchromize panes toggle binding
bind C-S set-window-option synchronize-panes\; display-message "synchronize-panes: #{?pane_synchronized,on,off}"

######################## Colors ########################
# Print this on bash to feel how colors look
# for i in {0..255}; do
#	printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
# done

######################## Plugins ########################
run-shell "~/.tmux_runtime/plugins/load_plugins.tmux"
